import sqlite3
import pandas as pd
from PyQt6.QtWidgets import (
    QWidget, QLabel, QPushButton, QFileDialog, QMessageBox, QVBoxLayout, QTableWidget,
    QTableWidgetItem, QHeaderView
)
from PyQt6.QtCore import Qt

class DersYukleWindow(QWidget):
    def __init__(self, bolum_id):
        super().__init__()
        self.bolum_id = bolum_id
        self.setWindowTitle("ðŸ“˜ Ders Listesi YÃ¼kleme")
        self.setGeometry(450, 250, 800, 500)
        self.setup_ui()

    def setup_ui(self):
        title = QLabel("Ders Listesi YÃ¼kleme (Excel DosyasÄ±ndan)")
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title.setStyleSheet("font-size:18px; font-weight:bold; margin-bottom:15px;")

        self.upload_btn = QPushButton("ðŸ“‚ Excel DosyasÄ± SeÃ§")
        self.upload_btn.setStyleSheet("background-color:#005BBB; color:white; font-weight:bold; padding:8px; border-radius:5px;")
        self.upload_btn.clicked.connect(self.load_excel)

        self.save_btn = QPushButton("ðŸ’¾ VeritabanÄ±na Kaydet")
        self.save_btn.setStyleSheet("background-color:#27ae60; color:white; font-weight:bold; padding:8px; border-radius:5px;")
        self.save_btn.clicked.connect(self.save_to_db)
        self.save_btn.setEnabled(False)

        self.table = QTableWidget()
        self.table.setColumnCount(5)
        self.table.setHorizontalHeaderLabels(["Ders Kodu", "Ders AdÄ±", "Ã–ÄŸretim Ãœyesi", "SÄ±nÄ±f", "YapÄ±"])
        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)

        layout = QVBoxLayout()
        layout.addWidget(title)
        layout.addWidget(self.upload_btn)
        layout.addWidget(self.save_btn)
        layout.addWidget(self.table)
        self.setLayout(layout)

        self.df = None  # Excel verilerini geÃ§ici olarak tutacaÄŸÄ±z

    def load_excel(self):
        file_path, _ = QFileDialog.getOpenFileName(self, "Excel DosyasÄ± SeÃ§", "", "Excel DosyalarÄ± (*.xlsx *.xls)")
        if not file_path:
            return

        try:
            self.df = pd.read_excel(file_path)
            expected_cols = ["Ders Kodu", "Ders AdÄ±", "Ã–ÄŸretim Ãœyesi", "SÄ±nÄ±f", "YapÄ±"]

            if not all(col in self.df.columns for col in expected_cols):
                QMessageBox.critical(self, "Hata", f"Excel formatÄ± hatalÄ±! Beklenen sÃ¼tunlar:\n{expected_cols}")
                return

            self.table.setRowCount(len(self.df))
            for i, row in self.df.iterrows():
                self.table.setItem(i, 0, QTableWidgetItem(str(row["Ders Kodu"])))
                self.table.setItem(i, 1, QTableWidgetItem(str(row["Ders AdÄ±"])))
                self.table.setItem(i, 2, QTableWidgetItem(str(row["Ã–ÄŸretim Ãœyesi"])))
                self.table.setItem(i, 3, QTableWidgetItem(str(row["SÄ±nÄ±f"])))
                self.table.setItem(i, 4, QTableWidgetItem(str(row["YapÄ±"])))

            self.save_btn.setEnabled(True)
            QMessageBox.information(self, "BaÅŸarÄ±lÄ±", "Excel dosyasÄ± baÅŸarÄ±yla yÃ¼klendi.")

        except Exception as e:
            QMessageBox.critical(self, "Hata", f"Excel okunamadÄ±: {str(e)}")

    def save_to_db(self):
        if self.df is None or self.df.empty:
            QMessageBox.warning(self, "UyarÄ±", "Kaydedilecek veri yok!")
            return

        try:
            conn = sqlite3.connect("sinav_takvimi.db")
            cursor = conn.cursor()

            for _, row in self.df.iterrows():
                cursor.execute("""
                    INSERT INTO Dersler (ders_kodu, ders_adi, ogretim_uyesi, sinif, yapi, bolum_id)
                    VALUES (?, ?, ?, ?, ?, ?)
                """, (
                    str(row["Ders Kodu"]),
                    str(row["Ders AdÄ±"]),
                    str(row["Ã–ÄŸretim Ãœyesi"]),
                    int(row["SÄ±nÄ±f"]),
                    str(row["YapÄ±"]),
                    self.bolum_id
                ))

            conn.commit()
            conn.close()

            QMessageBox.information(self, "Kaydedildi", f"{len(self.df)} ders baÅŸarÄ±yla veritabanÄ±na kaydedildi!")
            self.save_btn.setEnabled(False)

        except Exception as e:
            QMessageBox.critical(self, "VeritabanÄ± HatasÄ±", str(e))
